openapi: 3.0.0
info:
  version: 1.0.0
  title: TEST SERVICES
  description: Servicios de prueba
  termsOfService: http://localhost/prueba/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags: 
- name: request
  description: personas y comportamientos


servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fergalero/PRUEBA/1.0.0
  - description: prueba
    url: https://localhost:8080
    
paths: 


  /request/orderByDni:
    get:
      tags: 
      - request
      summary: Ordenar por DNI
      description:  Ordenar por DNI
      operationId: orderByDniRequest
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RequestResponse'
        405:
          description: Entrada invalida
          
  /request/orderByLastName:
    get:
      tags: 
      - request
      summary: Ordenar por apelllido paterno
      description:  Ordenar por apelllido paterno
      operationId: orderByLastNameRequest
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RequestResponse'
        405:
          description: Entrada invalida
  
  /request/list:
    get:
      tags: 
      - request
      summary: Listar desordenadamente
      description:  Listar desordenadamente
      operationId: listRequest
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RequestResponse'
        405:
          description: Entrada invalida 
          
  /request/{centroId}:
    get:
      tags: 
      - request
      summary: buscar comportamiento por centroId
      description: buscar comportamiento por centroId
      operationId: findRequestByCenterId
      parameters: 
      - name: centroId
        in: path
        description: 'Id de centro'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RequestResponse'
        405:
          description: Entrada invalida
          
  /request/{firmaId}:
    get:
      tags: 
      - request
      summary: buscar comportamiento por firmaId
      description: buscar comportamiento por firmaId
      operationId: findRequestBySignaturerId
      parameters: 
      - name: firmaId
        in: path
        description: 'Id de firma'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RequestResponse'
        405:
          description: Entrada invalida         
  
 
 
 
 
 
 
 
 
 
 
 
  
          
  
  /channel/{id}:
    put:
      tags: 
      - channel
      summary: Actualizar el canal
      description: Actualizar el canal
      operationId: updateChannel
      parameters: 
      - name: id
        in: path
        description: '1'
        required: true
        schema:
          type: integer
      requestBody:
          content:
            'application/json':
               schema:
                  $ref: '#/components/schemas/ChannelCustom'
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChannelCustom'
        405:
          description:  Valor de parametros no válidos.
    delete:
      tags: 
      - channel
      summary: eliminar canal por ID
      description: eliminar canal por ID
      operationId: deleteChannel
      parameters: 
      - name: id
        in: path
        description: 'Identificador de canal'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
        400:
          description: ID invalido
        404:
          description: Perfil no encontrado
  /setting/functionalRole/{rolId}/detail:
    get:
      tags: 
      - setting
      summary: Obtiene todos los roles funcionales
      description: Retorna todos los roles funcionales
      operationId: findConfigFunctionalRoleDetail
      parameters: 
      - name: rolId
        in: path
        description: '1'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DetailConfigFunctionalRole'
        400:
          description: Valor de parametros no válidos.
    post:
      tags: 
      - setting
      summary: guarda/actualiza la configuracion de los aplicativos por rol funcional
      description: guarda/actualiza la configuracion de los aplicativos por rol funcional
      operationId: saveConfigFunctionalRoleDetail
      requestBody:
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DetailConfigFunctionalRole'
      parameters: 
      - name: rolId
        in: path
        description: '1'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            'application/json':
               schema:
                type: boolean
        400:
          description: Valor de parametros no válidos.
  
  /setting/functionalRole:
    post:
      tags: 
      - setting
      summary: Obtiene todos los roles funcionales
      description: Retorna todos los roles funcionales
      operationId: findAllConfigFunctionalRole
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CustomPageable'
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConfigInitialFunctionalRole'
        400:
          description: Valor de parametros no válidos.
  /commercialChannel/all:
    get:
      tags:
      - commercialChannel
      summary: Obtiene todos los canales comerciales
      description: Obtiene todos los canales comerciales
      operationId: findAllCommercialChannel   
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/CommercialChannel'
security:
  - bearerAuth: []   
  
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
      
  schemas:
    Responsable:
      type: object
      discriminator:
        propertyName: responsableType
      properties:
        responsableId:
          type: integer
          format: int32
        cip:
          type: string
          maxLength: 80
        cargo:
          type: string
          maxLength: 80
        direccion:
          type: string
          maxLength: 80
        gerencia:
          type: string
          maxLength: 80
        canal:
          $ref: '#/components/schemas/Channel'
        ticketRemedy:
          type: string
          maxLength: 20
        tipo:
          type: string
          maxLength: 20
        sustento:
          type: string
          maxLength: 200 
    Application:
      type: object
      discriminator:
        propertyName: aplicacionType
      properties:
        aplicacionId:
          type: integer
          format: int32
        nombreAplicacion:
          type: string
          example: Teller
        tipoConexion:
          type: string
          description: tipo de conexión de aplicación en el sistema SIAM
          enum: 
          - automatica
          - manual
        activo:
          type: string
          description: estado de la aplicación en el sistema SIAM
        codigo:
          type: string
          description: Código de la aplicación
    
    ApplicationAndPolicyPassword:
      type: object
      discriminator:
        propertyName: applicationAndPolicyPasswordType
      properties:
        aplicacionId:
          type: integer
          format: int32
        nombreAplicacion:
          type: string
          example: Teller
        codigo:
          type: string
          description: Código de la aplicación
        policyPassword:
          $ref: '#/components/schemas/PolicyPasswordApplication'

    PolicyPasswordApplication:
      type: object
      discriminator:
        propertyName: policyPasswordApplicationType
      properties:
        politicaContrasenaId:
          type: integer
          format: int32
        nombrePolitica:
          type: string
        iniciarMayuscula:
          type: boolean
        soloMinuscula:
          type: boolean
        caracteresMin:
          type: integer
        caracteresMax:
          type: integer
        contieneMinuscula:
          type: boolean
        contieneMayuscula:
          type: boolean
        contieneNumero:
          type: boolean
        contieneCaracterEspecial:
          type: boolean
        mapaCaracteres:
          type: string
        nombreUsuario:
          type: boolean
        nombreUsuarioInverso:
          type: boolean
        nombrePersona:
          type: boolean
        apellidoPersona:
          type: boolean
        numeroDocumento:
          type: boolean  

    Profile:
      type: object
      discriminator:
        propertyName: profileType
      properties:
        perfilId:
          type: integer
          format: int32
        nombrePerfil:
          type: string
          example: Reportes
          maxLength: 80
        ventanaAcceso:
            type: string
        state:
          type: boolean
        modulos:
          type: array
          items:
            $ref: '#/components/schemas/Module'
      required:
      - nombrePerfil

    Module:
      type: object
      discriminator:
        propertyName: moduleType
      properties:
        moduloId:
          type: integer
          format: int32
        nombreModulo:
          type: string
          example: Reportes
          maxLength: 80
        claveModulo:
          type: string
          example: REPORT
          maxLength: 100
        acciones:
          type: array
          items:
            $ref: '#/components/schemas/Action'

    Action:
      type: object
      discriminator:
        propertyName: actionType
      properties:
        rolId:
          type: integer
          format: int32
        codigo:
          type: string
          example: REPORTE_SHOW
          maxLength: 50
        evento:
          type: string
          example: Visualizar Módulo de Reportes
          maxLength: 80
    
    Pageable: 
      description: parámetros mínimos de consulta paginable
      type: object
      properties:
        pageNumber:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
        totalElements:
          type: integer
        data:
          type: array
          items:
            type: object
    Direction: 
      description: dirección de la paginación asc o desc
      type: string
      enum: 
      - asc
      - desc

    ProfilePageableActive: 
      description: columna activa para paginación
      type: string
      enum: 
      - nombrePerfil
      - perfilId
      - state
      
    UserSecurity:
      type: object
      discriminator:
        propertyName: userSecurityType
      properties:
        usuarioId:
          type: integer
        nombre:
          type: string
          maxLength: 40
        bloqueado:
          type: boolean
        perfilId:
          type: integer
        persona:
          $ref: '#/components/schemas/Person'
        usuarioGrupo:
          $ref: '#/components/schemas/UsuarioGrupo'            
        puntoVenta:
          $ref: '#/components/schemas/PointSale'
        bloqueo:
          $ref: '#/components/schemas/Lock'
        canalesComerciales:
          type: array
          items:
            $ref: '#/components/schemas/CommercialChannel'
        canalesComercialesId:
          type: array
          items:
            type: integer
      required: 
        - nombre
        - perfilId
        - persona
        - puntoVenta

    ChangeUserProfile:
      type: object
      discriminator:
        propertyName: changeUserProfileType
      properties:
        usuarioId:
          type: integer
        perfilId:
          type: integer
      required: 
        - usuarioId
        - perfilId
          

    Employee:
      type: object
      discriminator:
        propertyName: employeeType
      properties:
        rolPersonaId:
          type: integer
        persona:
          $ref: '#/components/schemas/Person'
        puntoVenta:
          $ref: '#/components/schemas/PointSale' 
        rolFuncional:
          $ref: '#/components/schemas/FunctionalRole'
        provisiones:
          type: array
          items:
            $ref: '#/components/schemas/ProvisionedApplication'
          
    ProvisionedApplication:
      type: object
      discriminator:
        propertyName: provisionedApplicationType
      properties:
        usuarioProvId:
          type: integer
        perfilAdicional:
          type: string
          maxLength: 100
        nombreUsuarioProv:
          type: string
          maxLength: 200
          format: email
          example: user@tdp.com
        perfil:
          $ref: '#/components/schemas/ApplicationProfile' 
        aplicacion:
          $ref: '#/components/schemas/Application' 
          
    ApplicationProfile:
      type: object
      discriminator:
        propertyName: applicationProfileType
      properties:
        perfilId:
          type: integer
        nombre:
          type: string
          maxLength: 200
          format: email
          example: user@tdp.com
        codigo:
          type: string
          maxLength: 80
      
    
    Parameter:
      type: object
      discriminator:
        propertyName: parameterType
      properties:
        parametroId:
          type: integer
        minutosCambioContrasena:
          type: integer
        diasCambioContrasena:
          type: integer
        diasAvisoCambioContrasena:
          type: integer
        diasBloqueoAutomatico:
          type: integer
        minutosReactivacionIntentos:
          type: integer
        minutosDesconexion:
          type: integer
        diasAprovFallidos:
          type: integer
        validarTotpLogin:
          type: boolean
        tiempoTotpLogin:
          type: integer
          
          
    Lock:
      type: object
      discriminator:
        propertyName: lockType
      properties:
        bloqueoId:
          type: integer
        bloqueo:
          type: boolean
        comentario:
          type: string
      
    Person:
      type: object
      discriminator:
        propertyName: personType
      required: 
        - email
        - nombres
        - paterno
        # - materno
        - numDocumento
        - celular
        - tipoDocumento
      properties:
        personaId:
          type: integer
        email:
          type: string
          maxLength: 200
          format: email
          example: user@tdp.com
        nombres:
          type: string
          maxLength: 80
        paterno:
          type: string
          maxLength: 80
        materno:
          type: string
          maxLength: 80
        fechaNacimiento:
          type: string
        numDocumento:
          type: string
          maxLength: 20
        celular:
          type: string
          maxLength: 20
        telefonoFijo:
          type: string
          maxLength: 20
        state:
          type: boolean
        autenticacionBiometrica:
          type: boolean
        esVendedor:
          type: boolean
        docNumResponsable:
          type: string
          maxLength: 20
        hasUser:
          type: boolean
        tipoDocumento:
          $ref: '#/components/schemas/DocumentType'
        responsable:
          $ref: '#/components/schemas/Responsable'
        
    UsuarioGrupo:
      type: object
      discriminator:
        propertyName: usuarioGrupo
      required: 
        - certificado
      properties:
        usuarioGrupoId:
          type: integer
        numeroDoc:
          type: string
          maxLength: 20
        certificado:
          type: string
          maxLength: 20
        state:
          type: boolean
        usuarioIdRemplazo:
          type: integer
                    
    DocumentType:
      type: object
      discriminator:
        propertyName: documentType
      properties:
        tipoDocumentoId:
          type: integer
          format: int32
        codigo:
          type: string
          example: DNI
          maxLength: 5
        nombre:
          type: string
        tipo_codificacion:
          type: string
        caracteres_max:
          type: integer
        mascara:
          type: string        
        state:
          type: boolean
        tipo:
          type: integer
        longitud_exacta:
          type: boolean
        reg_exp:
          type: string
      required: 
        - tipoDocumentoId
    
    Company:
      type: object
      discriminator:
        propertyName: companyType
      properties:
        empresaId:
          type: integer
          format: int32
        nombreEmpresa:
          type: string
          example: SERVICIOS DIGITEX GUATEMALA SA
          maxLength: 100
        dominios:
          type: array
          items:
            $ref: '#/components/schemas/CompanyDomain'
        ruc:
          type: string
          example: '20152585965'

    Franchise:
      type: object
      discriminator:
        propertyName: franshiseType
      properties:
        franquiciaId:
          type: integer
          format: int32
        nombre:
          type: string
          example: SALESLAND PACIFICO
          maxLength: 100
        codigoFranquicia:
          type: string
          example: '3592'
          maxLength: 40
          
    Entity:
      type: object
      discriminator:
        propertyName: entityType
      properties:
        entidadId:
          type: integer
          format: int32
        codigo:
          type: integer
          format: int32
        nombreEntidad:
          type: string
          example: DIGITEX FIJA GUATEMALA
          maxLength: 100
        empresa:
          $ref: '#/components/schemas/Company'
          
    PointSale:
      type: object
      discriminator:
        propertyName: pointSaleType
      properties:
        puntoVentaId:
          type: integer
          format: int32
        codigo:
          type: string
          example: 03522008
          maxLength: 20
        nombrePuntoVenta:
          type: string
          example: IN DIGITEX RESID FIJA GUATEMALA
          maxLength: 100
        grupoAd:
          type: string
          maxLength: 80
        codigoAtis:
          type: string
          maxLength: 20
        codigoAgencia:
          type: string
          maxLength: 20
        codigoFranquicia:
          type: string
          maxLength: 4
        direccion:
          type: string
          maxLength: 100
        ubigeo:
          type: string
          maxLength: 10
        entidad:
          $ref: '#/components/schemas/Entity'
        ubigeoPuntoVenta:
          $ref: '#/components/schemas/UbigeoPointSale'
        createdate:
          type: string
        expirydate:
          type: string
        connection:
          type: string
        grupoAdAnt:
            type: string
      required: 
        - puntoVentaId
          
    CompanyHierarchy:
      type: object
      discriminator:
        propertyName: companyHierarchyType
      properties:
        empresaId:
          type: integer
          format: int32
        nombreEmpresa:
          type: string
          example: SERVICIOS DIGITEX GUATEMALA SA
          maxLength: 100
        entidades:
          type: array
          items:
            $ref: '#/components/schemas/EntityHierarchy'
        dominios:
          type: array
          items:
            $ref: '#/components/schemas/CompanyDomain'
            
    CompanyDomain:
      type: object
      discriminator:
        propertyName: companyDomainType
      properties:
        dominioId:
          type: integer
          format: int32
        dominio:
          type: string
          example: SERVICIOS DIGITEX GUATEMALA SA
          maxLength: 255
            
    EntityHierarchy:
      type: object
      discriminator:
        propertyName: entityHierarchyType
      properties:
        entidadId:
          type: integer
          format: int32
        canalComercialId:
          type: integer
          format: int32
        nombreCanalComercial:
          type: string
        codigo:
          type: integer
          format: int32
        nombreEntidad:
          type: string
          example: DIGITEX FIJA GUATEMALA
          maxLength: 100
        puntosDeVenta:
          type: array
          items:
            $ref: '#/components/schemas/PointSaleHierarchy'
          
    PointSaleHierarchy:
      type: object
      discriminator:
        propertyName: pointSaleHierarchyType
      properties:
        puntoVentaId:
          type: integer
          format: int32
        codigo:
          type: string
          example: 03522008
          maxLength: 20
        grupoAd:
          type: string
          maxLength: 100          
        nombrePuntoVenta:
          type: string
          example: IN DIGITEX RESID FIJA GUATEMALA
          maxLength: 100

    FunctionalRole:
      type: object
      discriminator:
        propertyName: functionalRoleType
      properties:
        rolFuncionalId:
          type: integer
          format: int32
        codigo:
          type: string
          example: null
          maxLength: 10
        nombre:
          type: string
          example: ASESOR _2DA_LINEA_ACREDITACIONES
          maxLength: 100
        descripcion:
          type: string
          example: 
          maxLength: 100
        tipo:
          type: string
          example: 
          maxLength: 1
        canal:
          $ref: '#/components/schemas/Channel'
        responsable:
          $ref: '#/components/schemas/Person'
        aprobadoPor:
          $ref: '#/components/schemas/Person'
        profilesFunctional:
          type: array
          items:
            $ref: '#/components/schemas/ProfileFunctional'
          
          
    Ticket:
      type: object
      discriminator:
        propertyName: ticketType
      properties:
        ticketId:
          type: integer
          format: int32
        cantidadSolicitudes:
          type: integer
          format: int32
        ticketNumero:
          type: string
          example: TIK00001
          maxLength: 20
        fechaCierre:
          type: string
          format: date
        fecha:
          type: string
        createdAt:
          type: string          
        errorEnEjecucion:
          type: boolean
        solicitante:
          $ref: '#/components/schemas/UserSecurity'
        aprobador:
          $ref: '#/components/schemas/UserSecurity'
        estadoEjecucionTic:
          $ref: '#/components/schemas/TicketExecutionStatus'   
        tipoTicket:
          $ref: '#/components/schemas/TicketType' 
        tipoSolicitud:
          $ref: '#/components/schemas/TicketRequestType' 
        solicitudes:
          type: array
          items:
            $ref: '#/components/schemas/TicketRequest'
                     
          
    TicketStatus:
      type: object
      discriminator:
        propertyName: ticketStatusType
      properties:
        estadoTicketId:
          type: integer
          format: int32
        nombreEstadoTicket:
          type: string
          example: Pendiente
          maxLength: 40
        colorSemaforoHex:
          type: string
          example: #FADBD8
          maxLength: 10
        colorSemaforoRgb:
          type: string
          example: null
          maxLength: 10
          
    TicketExecutionStatus:
      type: object
      discriminator:
        propertyName: ticketExecutionStatusType
      properties:
        estadoEjecucionTicId:
          type: integer
          format: int32
        nombreEstadoEjecucionTic:
          type: string
          example: Pendiente
          maxLength: 40
        colorSemaforoHex:
          type: string
          example: #FADBD8
          maxLength: 10
        colorSemaforoRgb:
          type: string
          example: null
          maxLength: 10
        estadoTicket:
          $ref: '#/components/schemas/TicketStatus'
          
    TicketType:
      type: object
      discriminator:
        propertyName: ticketType
      properties:
        tipoTicketId:
          type: integer
          format: int32
        nombreTipoTicket:
          type: string
          example: Gestion de Accesos
          maxLength: 40
          
    TicketRequestType:
      type: object
      discriminator:
        propertyName: ticketRequestTypeType
      properties:
        tipoSolicitudId:
          type: integer
          format: int32
        nombreTipoSolicitud:
          type: string
          example: ALTA
          maxLength: 20

    TicketComment:
      type: object
      discriminator:
        propertyName: ticketCommentType
      properties:
        comentario:
          type: string
          example: comentario de rechazo
          maxLength: 510
      required: 
      - comentario
      
    AccountHistory:
      type: object
      discriminator:
        propertyName: accountHistoryType
      properties:
        persona:
          $ref: '#/components/schemas/Person'
        solicitudes:
          type: array
          items:
            $ref: '#/components/schemas/TicketRequestHistory'
            
    TicketHistory:
      type: object
      discriminator:
        propertyName: ticketHistoryType
      properties:
        ticketId:
          type: integer
          format: int32
        cantidadSolicitudes:
          type: integer
          format: int32
        ticketNumero:
          type: string
          example: TIK00001
          maxLength: 20
        fechaCierre:
          type: string
          format: date
        fecha:
          type: string
        solicitante:
          $ref: '#/components/schemas/UserSecurity'
        aprobador:
          $ref: '#/components/schemas/UserSecurity'
        estadoEjecucionTic:
          $ref: '#/components/schemas/TicketExecutionStatus'   
        tipoTicket:
          $ref: '#/components/schemas/TicketType' 
        tipoSolicitud:
          $ref: '#/components/schemas/TicketRequestType' 
            
            
    TicketRequestHistory:
      type: object
      discriminator:
        propertyName: ticketRequestHistoryType
      properties:
        solicitudId:
          type: integer
          format: int32
        subticketNumero:
          type: string
          example: null
          maxLength: 20
        fechaCese:
          type: string
        comentario:
          type: string
          maxLength: 510
        fechaAprobacion:
          type: string
        personaId:
          type: integer
          format: int32
        puntoVentaId:
          type: integer
          format: int32
        rolFuncional:
          $ref: '#/components/schemas/FunctionalRole' 
        estadoEjecucionSol:
          $ref: '#/components/schemas/TicketRequestExecutionStatus'
        persona:
          $ref: '#/components/schemas/Person'
        solicitudPersona:
          $ref: '#/components/schemas/PersonRequest'
        puntoVenta:
          $ref: '#/components/schemas/PointSale'
        ticket:
          $ref: '#/components/schemas/TicketHistory'
          
    TicketRequestProcess:
      type: object
      discriminator:
        propertyName: ticketRequestProcessType
      properties:
        solicitudId:
          type: integer
          format: int32
        aplicacion:
          type: string
          maxLength: 500
        perfil:
          type: string
          maxLength: 500
        detalle:
          type: string
          maxLength: 500
        exito:
          type: integer
          format: int32
          

    RetryStatus:
      type: object
      discriminator:
        propertyName: retryStatusType
      properties:
        estadoReintentoId:
          type: integer
          format: int32
        desEstadoReintento:
          type: string
          example: Reintento requerido
          maxLength: 30

    InitialLoadRetry:
      type: object
      discriminator:
        propertyName: initialLoadRetryType
      properties:
        diasAprovisionados:
          type: integer
          format: int32
        solicitudes:
          $ref: '#/components/schemas/Pageable'
        estadosReintento:
          type: array
          items:
            $ref: '#/components/schemas/RetryStatus'
            
    FailedRequest:
      type: object
      discriminator:
        propertyName: failedRequestType
      properties:
        solicitudId:
          type: integer
          format: int32
        fecha:
          type: string
        solicitante:
          type: string
        tipo:
          type: string
        trabajador:
          type: string
        nomPuntoVenta:
          type: string
        nomRolFuncional:
          type: string
        aprobador:
          type: string
        estadoReintento:
          $ref: '#/components/schemas/RetryStatus'
        
               
    TicketRequest:
      type: object
      discriminator:
        propertyName: ticketRequestType
      properties:
        solicitudId:
          type: integer
          format: int32
        subticketNumero:
          type: string
          example: null
          maxLength: 20
        fechaCese:
          type: string
        comentario:
          type: string
          maxLength: 510
        fechaAprobacion:
          type: string
        docNumResponsable:
          type: string
          maxLength: 20
        personaId:
          type: integer
          format: int32
        puntoVentaId:
          type: integer
          format: int32
        errorEnEjecucion:
          type: boolean
        rolFuncional:
          $ref: '#/components/schemas/FunctionalRole' 
        estadoEjecucionSol:
          $ref: '#/components/schemas/TicketRequestExecutionStatus'
        persona:
          $ref: '#/components/schemas/Person'
        solicitudPersona:
          $ref: '#/components/schemas/PersonRequest'
        puntoVenta:
          $ref: '#/components/schemas/PointSale'

    PersonRequest:
      type: object
      discriminator:
        propertyName: personRequestType
      properties:
        solicitudId:
          type: integer
        email:
          type: string
          maxLength: 200
          format: email
          example: user@tdp.com
        nombres:
          type: string
        paterno:
          type: string
          maxLength: 80
        materno:
          type: string
          maxLength: 80
        fechaNacimiento:
          type: string
        numDocumento:
          type: string
          maxLength: 20
        celular:
          type: string
          maxLength: 20
        telefonoFijo:
          type: string
          maxLength: 20
        autenticacionBiometrica:
          type: boolean
        esVendedor:
          type: boolean
        tipoDocumento:
          $ref: '#/components/schemas/DocumentType'
      required: 
        - email
        - nombres
        - paterno
        # - materno
        - numDocumento
        - celular
          
    TicketRequestStatus:
      type: object
      discriminator:
        propertyName: ticketRequestStatusType
      properties:
        estadoSolicitudId:
          type: integer
          format: int32
        nombreEstadoSolicitud:
          type: string
          example: null
          maxLength: 40
        colorSemaforoHex:
          type: string
          example: #FADBD8
          maxLength: 10
        colorSemaforoRgb:
          type: string
          example: null
          maxLength: 10
    
    ApplicationResetPasswordRequest:
      description: solicitud de cambio de contraseña
      type: object
      discriminator:
        propertyName: applicationResetPasswordRequestType
      properties:
        applicationId:
          type: integer
          format: int32
          example: 28
        password:
          type: string
          example: null
    
    BlockAllAppRequest:
      description: solicitud de bloqueo o desbloqueo de todas las aplicaciones incluyendo SIAM
      type: object
      discriminator:
        propertyName: blockAllAppRequestType
      properties:
        usuarioId:
          type: integer
          format: int32
          example: 28
        username:
          type: string
          example: null
        accion:
          type: integer
          example: 1
        motivo:
          type: string
          example: null
          
    UnLockUserSiamRequest:
      description: desbloqueo de un usuario Siam
      type: object
      discriminator:
        propertyName: unLockUserSiamRequestType
      properties:
        usuarioId:
          type: integer
          format: int32
          example: 28
        motivo:
          type: string
          example: null
          
    SiamResetPasswordRequest:
      description: solicitud de cambio de contraseña de siam
      type: object
      discriminator:
        propertyName: siamResetPasswordRequestType
      properties:
        currentPassword:
          type: string
          example: null
        newPassword:
          type: string
          example: null
    
    StatusApplicationsRequest:
      description: solicitud para listar estados de aplicaciones de un usuario según su último ticket
      type: object
      discriminator:
        propertyName: StatusApplicationsRequestType
      properties:
        usuarioId:
          type: integer
          example: 28
        ticket:
          type: string
          example: null
    
    StatusApplicationsResponse:
      description: respuesta de solicitud para listar estados de aplicaciones de un usuario según su último ticket
      type: object
      discriminator:
        propertyName: StatusApplicationsResponseType
      properties:
        aplicacionId:
          type: integer
          example: 26
        nombreAplicacion:
          type: string
          example: null
        aplicacionBloqueada:
          type: boolean
          example: false
        exito:
          type: boolean
          example: true
        detalle:
          type: string
          example: null
          
    ApplicationResetPasswordResponse:
      description: respuesta de cambio de contraseña
      type: object
      discriminator:
        propertyName: applicationResetPasswordResponseType
      properties:
        state:
          type: boolean
          example: true
        msg:
          type: string
          example: null
    
    ValidateMessage:
      description: state con message
      type: object
      discriminator:
        propertyName: validateMessageType
      properties:
        state:
          type: boolean
          example: true
        msg:
          type: string
          example: null

    TicketRequestExecutionStatus:
      type: object
      discriminator:
        propertyName: ticketRequestExecutionStatusType
      properties:
        estadoEjecucionSolId:
          type: integer
          format: int32
        nombreEstadoEjecucionSol:
          type: string
          example: null
          maxLength: 40
        colorSemaforoHex:
          type: string
          example: #FADBD8
          maxLength: 10
        colorSemaforoRgb:
          type: string
          example: null
          maxLength: 10
        estadoSolicitud:
          $ref: '#/components/schemas/TicketRequestStatus'
        
          
    UserSecurityPageableActive: 
      description: columna activa para paginación
      type: string
      enum: 
      - usuarioId
      - nombre
      - nombres
      - paterno
      - materno
      - email
      
      
    CustomPageable: 
      type: object
      discriminator:
        propertyName: customPageableType
      properties:
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        atributos:
          type: array
          items:
            $ref: '#/components/schemas/EntityAttribute'
        active:
          type: string
          example: null
          maxLength: 40
        direction:
          type: string
          example: null
          maxLength: 5
      
    FilterType: 
      description: tipo de parametro para filtro en paginación
      type: string
      enum: 
      - TEXT
      - SELECT_MULTIPLE
      - RADIO_BUTTON
      - NUMBER
      - TIME
      - DATE      

    AttachedFile:
      description: Archivo adjunto en base64
      type: object
      discriminator:
        propertyName: attachedFileType
      properties:
        nombreArchivo:
          type: string
          example: demo.docx
        archivoBase64:
          type: string
          example: ZGVtbw==


    EntityAttribute: 
      type: object
      discriminator:
        propertyName: entityAttributeType
      properties:
        value:
          type: string
          example: null
          maxLength: 40
        field:
          type: string
          example: null
          maxLength: 40
        filterType:
          type: string
          example: null
          maxLength: 40
      
    EmployeePageableActive: 
      description: columna activa para paginación
      type: string
      enum: 
      - tipoDocumento
      - numeroDocumento
      - nombres
      - paterno
      - materno
      
    TicketPageableActive:   
      description: columna activa para paginación
      type: string
      enum:
      - ticketId
      - ticketNumero
      - fecha
      - createdAt
      - tipoTicket
      - cantidadSolicitudes
      - estadoTicket

    TicketPcPageableActive:
      description: columna activa para paginación
      type: string
      enum:
        - ticketId
        - createdAt
        - cantidadSolicitudes

    FailRequestPageableActive:   
      description: columna activa para paginación
      type: string
      enum:
      - numeroDocumento
      - estadoReintento
      - fecha
      
    RequestType:
      type: object
      discriminator:
        propertyName: requestTypeType
      properties:
        tipoSolicitudId:
          type: integer
          format: int32
        nombre:
          type: string
          example: CREAR ROL FUNCIONAL
          maxLength: 50
    RequestStatus:
      type: object
      discriminator:
        propertyName: requestStatusType
      required:
        - codigo
      properties:
        estadoSolicitudId:
          type: integer
          format: int32
        nombre:
          type: string
          maxLength: 20
        colorHex:
          type: string
          maxLength: 10
        codigo:
          type: string
          maxLength: 10
          
    RequestPageableActive: 
      description: columna activa para paginación
      type: string
      enum: 
      - ticketNumero
      - tipoSolicitud.nombre
      - aprobador.nombres
      - aprobador.username
      - estadoSolicitud.nombre
      - fechaSolicitud
    ProfileFunctional:
      type: object
      discriminator:
        propertyName: profileFunctionalType
      properties:
        perfilId:
          type: integer
          format: int32
        codigo:
          type: string
          maxLength: 40
        nombre:
          type: string
          maxLength: 100
        aplicacion:
          $ref: '#/components/schemas/Application'
    Channel:
      type: object
      discriminator:
        propertyName: channelType
      properties:
        canalId:
          type: integer
          format: int32
        canalComercial:
          $ref: '#/components/schemas/CommercialChannel'
        canalGenerico:
          $ref: '#/components/schemas/GenericChannel'
    CommercialChannel:
      type: object
      discriminator:
        propertyName: commercialChannelType
      properties:
        canalComercialId:
          type: integer
          format: int32
        canalComercialCod:
          type: string
          example: 
          maxLength: 3
        nombre:
          type: string
          example: 
          maxLength: 60
        canalAmdocs:
          $ref: '#/components/schemas/AmdocsChannel'
        canales:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        codigoAtis:
          type: string
          example: 'IN'
          maxLength: 20
    GenericChannel:
      type: object
      discriminator:
        propertyName: genericChannelType
      properties:
        canalGenericoId:
          type: integer
          format: int32
        nombre:
          type: string
          example: 
          maxLength: 60        
        canales:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    AmdocsChannel:
      type: object
      discriminator:
        propertyName: amdocsChannelType
      properties:
        canalAmdocsId:
          type: integer
          format: int32
        canalAmdocsCod:
          type: string
          example: 
          maxLength: 3
        nombre:
          type: string
          example: 
          maxLength: 60
        descripcionIngles:
          type: string
          example: 
          maxLength: 60

    Attachments:
      type: object
      discriminator:
        propertyName: attachmentsType
      properties:
        adjuntoId:
          type: integer
          format: int32
        nombreArchivo:
          type: string
        referencia:
          type: string
        base64EncryptedFile:
          type: string

    RequestResponse:
      type: object
      discriminator:
        propertyName: requestType
      properties:
        solicitudId:
          type: integer
          format: int32
        ticketNumero:
          type: string
          example: REQ20210311000001
          maxLength: 20
          description: Numero/Codigo de solicitud
        tipoSolicitud:
          $ref: '#/components/schemas/RequestType'
        functionalRole:
          $ref: '#/components/schemas/FunctionalRole'
        fechaEjecucion:
          type: string
          description: fecha de ejecucion
        fechaSolicitud:
          type: string
          description: fecha de solicitud
        estadoSolicitud:
          $ref: '#/components/schemas/RequestStatus'
        responsable:
          $ref: '#/components/schemas/Person'
        canal:
          $ref: '#/components/schemas/Channel'
        aprobador:
          $ref: '#/components/schemas/Person'
        perfilador:
          $ref: '#/components/schemas/Person'
        adjunto:
          $ref: '#/components/schemas/Attachments'
        actasReunion:
          type: array
          items:
            $ref: '#/components/schemas/Attachments'
          default: []
        profilesFunctional:
          type: array
          items:
            $ref: '#/components/schemas/ProfileFunctional'
        fechaCierre:
          type: string
          description: fecha de ejecucion
        sustento:
          type: string
          maxLength: 255
        comentarioAprobador:
          type: string
          maxLength: 255
        comentarioPerfilamiento:
          type: string
          maxLength: 255
        aplicaciones:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        base64EncryptedFile:
          type: string
        nombreRol:
          type: string
          maxLength: 80
        nombreArchivo:
          type: string
        ticketNumeroModificacion:
          type: string
          description: Numero de ticket generado automaticamente para una solicitud de modificacion
        fechaAprobacion:
          type: string
          description: fecha de aprobacion
          
    RequestRequest:
      type: object
      discriminator:
        propertyName: requestType
      properties:
        solicitudId:
          type: integer
          format: int32
        ticketNumero:
          type: string
          example: REQ20210311000001
          maxLength: 20
          description: Numero/Codigo de solicitud, esto se genera automaticamente
        tipoSolicitudId:
          type: integer
          format: int32
        functionalRoleId:
          type: integer
          format: int32
        fechaEjecucion:
          type: string
          description: fecha de ejecucion
        fechaSolicitud:
          type: string
          description: fecha de solicitud
        codigoEstado:
          type: string
        responsableId:
          type: integer
          format: int32
        canalId:
          type: integer
          format: int32
        aprobadorId:
          type: integer
          format: int32
        perfiladorId:
          type: integer
          format: int32
        base64EncryptedFile:
          type: string
        nombreArchivo:
          type: string
        actasReunion:
          type: array
          items:
            $ref: '#/components/schemas/AttachedFile'
        fechaCierre:
          type: string
          description: fecha de ejecucion
        sustento:
          type: string
          maxLength: 255
        comentarioAprobador:
          type: string
          maxLength: 255
        comentarioPerfilamiento:
          type: string
          maxLength: 255
        aplicacionesId:
          type: array
          description: Lista de ids de aplicaciones
          items:
            type: integer
            format: int32
        nombreRol:
          type: string
          maxLength: 80
        ticketNumeroModificacion:
          type: string
          description: Numero de ticket generado automaticamente para una solicitud de modificacion
        perfilesFuncionalesId:
          type: array
          description: Lista de ids de perfiles de los roles funcionales
          items:
            type: integer
            format: int32
        fechaAprobacion:
          type: string
          description: fecha de aprobacion
        cambioFile:
          type: boolean
          description: valida si modifico el archivo
          
          
    UPerson:
      type: object
      discriminator:
        propertyName: uPersonType
      properties:
        personaId:
          type: integer
        usuarioId:
          type: integer
        bloqueoAllApp:
          type: integer
        username:
          type: string
        nombre:
          type: string
        paterno:
          type: string
        materno:
          type: string
            
    ResponsableRequest:
      type: object
      discriminator:
        propertyName: responsableType
      required:
        - numDocumento
        - tipoDocumentoId
        - nombres
        - paterno
        # - materno
        - canalId
        - ticketRemedy
        - email
        - celular
      properties:
        personaId:
          type: integer
          format: int32
        numDocumento:
          type: string
          maxLength: 20
          minLength: 1
        tipoDocumentoId:
          type: integer
          format: int32
        nombres:
          type: string
          maxLength: 80
          minLength: 1
        paterno:
          type: string
          maxLength: 80
          minLength: 1
        materno:
          type: string
          maxLength: 80
          minLength: 1
        cip:
          type: string
          maxLength: 80
        cargo:
          type: string
          maxLength: 80
        direccion:
          type: string
          maxLength: 100
        gerencia:
          type: string
          maxLength: 100
        canalId:
          type: integer
          format: int32
        ticketRemedy:
          type: string
          maxLength: 20
          minLength: 1
        tipo:
          type: string
        sustento:
          type: string
          maxLength: 200
        email:
          type: string
          maxLength: 200
          format: email
          example: user@tdp.com
          minLength: 1
        celular:
          type: string
          maxLength: 20
          minLength: 1
          
    ResponsablePageableActive: 
      description: columna activa para paginación
      type: string
      enum: 
      - responsableId
      - persona.numDocumento
      - persona.nombres
      - canal.canalGenerico.nombre
      - direccion
      - gerencia
      - tipo
      - state
    ValidateFunctionalRol:
      type: object
      discriminator:
        propertyName: validateRolFunctionalType      
      properties:
        code:
          type: string
          maxLength: 20
          minLength: 1
        description:
          type: string
          maxLength: 100
          
    ProfileParameterCustom:
        type: object
        discriminator:
            propertyName: profileParameterType
        properties:
          label:
              type: string
              minLength: 1
          value:
              type: string
              minLength: 1
          tipoValor:
              type: string
              minLength: 1
          valor:
              type: array
              items:
                $ref: '#/components/schemas/TypeValueProfileParameter'
                
    TypeValueProfileParameter:
      type: object
      discriminator:
        propertyName: typeValueProfileParameter
      properties:
        id:
          type: integer
        nombre:
          type: string
          
    UbigeoPointSale:
        type: object
        discriminator:
            propertyName: ubigeoPointSale
        properties:
          ubigeo:
              type: string
              minLength: 10
          distrito:
              type: string
              minLength: 100
          provincia:
              type: string
              minLength: 100
          departamento:
              type: string
              minLength: 100
    ConfigFunctionalRole:
        type: object
        discriminator:
            propertyName: configFunctionalRoleType
        properties:
          rolFuncionalId:
              type: integer
          nombreRolFuncional:
              type: string
              maxLength: 80
              
    ConfigCatalogo:
        type: object
        discriminator:
            propertyName: configFunctionalRoleType
        properties:
          clave:
              type: string
              maxLength: 50
          codigo:
              type: string
              maxLength: 20
          valor:
              type: string
              maxLength: 100
              
    ConfigInitialFunctionalRole:
        type: object
        discriminator:
            propertyName: configInitialFunctionalRoleType
        properties:
          rolesFuncionales:
            $ref: '#/components/schemas/Pageable'
          dependencias:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          cargos:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          tipos:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          negocios:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          canales:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          autorizadoPor:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
          empresaAutoriza:
              type: array
              items:
                $ref: '#/components/schemas/ConfigCatalogo'
                
    DetailConfigFunctionalRole:
        type: object
        discriminator:
            propertyName: detailConfigFunctionalRoleType
        properties:
          atis:
            $ref: '#/components/schemas/ConfigAtis'
          isis:
            $ref: '#/components/schemas/ConfigIsis'
            
    ConfigAtis:
        type: object
        discriminator:
            propertyName: configAtisType
        properties:
          esFuerzaVenta:
            type: boolean
          esCajeroVirtual:
            type: boolean
          complemento:
              type: string
              maxLength: 40
              
    ConfigIsis:
        type: object
        discriminator:
            propertyName: configAtisType
        properties:
          dependencia:
              type: string
              maxLength: 3
          cargo:
              type: string
              maxLength: 2
          tipo:
              type: string
              maxLength: 3
          negocio:
              type: string
              maxLength: 2
          canal:
              type: string
              maxLength: 2
          autorizaPor:
              type: string
              maxLength: 100
              
          empresaAutoriza:
              type: string
              maxLength: 100
    ChannelCustom:
      type: object
      discriminator:
        propertyName: channelCustom
      properties:
        nombreCanalComercial:
          type: string
          example: 
          maxLength: 60
        canalComercialCod:
          type: string
          example: 
          maxLength: 3
        codigoAtis:
          type: string
          example: 
          maxLength: 20
        nombreCanalGenerico:
          type: string
          example: 
          maxLength: 60
        canalAmdocsId:
          type: number
          example: 1
        canalAmdocs:
          $ref: '#/components/schemas/AmdocsChannel'
        canalId:
          type: number
          example: 1
          
    TicketPc:
      type: object
      discriminator:
        propertyName: ticketPcType
      properties:
        ticketId:
          type: integer
          format: int32
        fechaAprobacion:
          type: string
          format: date
        cantidadSolicitudes:
          type: integer
          format: int32
        createdAt:
          type: string          
        errorEnEjecucion:
          type: boolean
        solicitante:
          $ref: '#/components/schemas/UserSecurity'
        aprobador:
          $ref: '#/components/schemas/UserSecurity'
        estadoEjecucionTic:
          $ref: '#/components/schemas/TicketExecutionStatus'   
        tipoSolicitud:
          $ref: '#/components/schemas/TicketRequestType'             
        solicitudes:
          type: array
          items:
            $ref: '#/components/schemas/TicketPcRequest'
                                   
    TicketPcRequest:
      type: object
      discriminator:
        propertyName: ticketPcRequestType
      properties:
        solicitudId:
          type: integer
          format: int32     
        puntoVentaId:
          type: integer
          format: int32
        fechaAprobacion:
          type: string
          format: date
        errorEnEjecucion:
          type: boolean
        estadoEjecucionSol:
          $ref: '#/components/schemas/TicketRequestExecutionStatus'
        motivosPc:
          $ref: '#/components/schemas/MotivosPc'
        equipoPc:
          $ref: '#/components/schemas/EquipoPc'                        
        activosPc:
          $ref: '#/components/schemas/ActivosPc'                        
        puntoVenta:
          $ref: '#/components/schemas/PointSale'     
                                   
    MotivosPc:
      type: object
      discriminator:
        propertyName: motivosPc
      properties:
        motivoId: 
          type: integer
          format: int32
        nombreMotivo:
          type: string

    EquipoPc:
      type: object
      discriminator:
        propertyName: equipoPc
      properties:
        equipoId:
          type: integer
        macAddress:
          type: string
        nombreAsignado:
          type: string         
#        puntoVentaOrigenId:
#          type: integer              
        marcasPc:
          $ref: '#/components/schemas/MarcasPc'
        tipoActivosPc:
          $ref: '#/components/schemas/TipoActivosPc'
        puntoVentaOrigen:
          $ref: '#/components/schemas/PointSale'          

    ActivosPc:
      type: object
      discriminator:
        propertyName: activosPc
      properties:
        activoId:
          type: integer
        macAddress:
          type: string              
        nombreAsignado:
          type: string         
        marcasPc:
          $ref: '#/components/schemas/MarcasPc'
        tipoActivosPc:
          $ref: '#/components/schemas/TipoActivosPc'       
          
    MarcasPc:
      type: object
      discriminator:
        propertyName: marcasPc
      properties:
        marcaId: 
          type: integer
          format: int32
        nombreMarca:
          type: string

    TipoActivosPc:
      type: object
      discriminator:
        propertyName: tipoActivosPc
      properties:
        tipoActivoId: 
          type: integer
          format: int32
        nombreActivo:
          type: string
               